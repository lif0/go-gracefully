// Code generated by go-enum DO NOT EDIT.
// Version: v0.9.2

package gracefully

import (
	"errors"
	"fmt"
)

// ENUM(Running, Draining, Stopped)
//
// Status represents the state of a service during graceful shutdown.
type Status byte

const (
	// StatusRunning - the service is running.
	StatusRunning Status = iota

	// StatusDraining - the service is shutting down gracefully.
	StatusDraining

	// StatusStopped - graceful shutdown has fully finished;
	// all resources are released and the process can safely exit.
	StatusStopped
)

var ErrInvalidStatus = errors.New("not a valid Status")

const _StatusName = "RunningDrainingStopped"

var _StatusMap = map[Status]string{
	StatusRunning:  _StatusName[0:7],
	StatusDraining: _StatusName[7:15],
	StatusStopped:  _StatusName[15:22],
}

// String implements the Stringer interface.
func (x Status) String() string {
	if str, ok := _StatusMap[x]; ok {
		return str
	}
	return fmt.Sprintf("Status(%d)", x)
}
